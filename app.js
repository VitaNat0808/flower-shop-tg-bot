// =============================================
// üå∏ –¶–í–ï–¢–û–ß–ù–´–ô –ú–ê–ì–ê–ó–ò–ù - Telegram Mini App
// =============================================

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = null;
let cart = [];
let currentCategory = 'all';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
function initTelegramApp() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp) {
        tg = window.Telegram.WebApp;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        tg.ready();
        tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
        tg.enableClosingConfirmation(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        tg.BackButton.onClick(handleBackButton);
        
        console.log('üå∏ Telegram Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', tg.initDataUnsafe?.user);
        
    } else {
        console.log('üå∏ –ó–∞–ø—É—â–µ–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –Ω–µ –≤ Telegram');
        // –≠–º—É–ª–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        tg = {
            BackButton: {
                show: () => console.log('BackButton show'),
                hide: () => console.log('BackButton hide'),
                onClick: (cb) => { window.backButtonCallback = cb; }
            },
            showPopup: (params) => {
                alert(params.title + '\n' + params.message);
            },
            showAlert: (message) => {
                alert(message);
            },
            HapticFeedback: {
                impactOccurred: () => console.log('Haptic feedback')
            },
            openTelegramLink: (url) => {
                window.open(url, '_blank');
            }
        };
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    loadProducts();
    setupCategoryTabs();
    updateCartDisplay();
    setupDeliveryDate();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (—Å–µ–≥–æ–¥–Ω—è + 1 –¥–µ–Ω—å)
function setupDeliveryDate() {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    
    const minDate = tomorrow.toISOString().split('T')[0];
    const dateInput = document.getElementById('deliveryDate');
    if (dateInput) {
        dateInput.min = minDate;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
function handleBackButton() {
    if (isProductPageVisible()) {
        showMainPage();
    } else if (isOrderPageVisible()) {
        showMainPage();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
function isProductPageVisible() {
    return !document.getElementById('productPage').classList.contains('hidden');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–∫–∞–∑–∞
function isOrderPageVisible() {
    return !document.getElementById('orderPage').classList.contains('hidden');
}

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const products = [
    {
        id: 1,
        name: "–ë—É–∫–µ—Ç –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑",
        description: "11 —Ä–æ—Å–∫–æ—à–Ω—ã—Ö –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑ —Å –∑–µ–ª–µ–Ω—å—é",
        price: 3500,
        category: "roses",
        emoji: "üåπ",
        features: ["–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã", "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ 2 —á–∞—Å–∞"]
    },
    {
        id: 2,
        name: "–í–µ—Å–µ–Ω–Ω–∏–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        description: "15 —Å–≤–µ–∂–∏—Ö —Ç—é–ª—å–ø–∞–Ω–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤",
        price: 2200,
        category: "tulips",
        emoji: "üå∑",
        features: ["–Ø—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞", "–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã", "–î–æ–ª–≥–æ —Å—Ç–æ—è—Ç"]
    },
    {
        id: 3,
        name: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –º–∏–∫—Å",
        description: "–°–º–µ—Å—å —Ä–æ–∑, –ø–∏–æ–Ω–æ–≤ –∏ —ç—É—Å—Ç–æ–º—ã",
        price: 4200,
        category: "mixed",
        emoji: "üíê",
        features: ["–†–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã", "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è"]
    },
    {
        id: 4,
        name: "–ë—É–∫–µ—Ç –±–µ–ª—ã—Ö —Ä–æ–∑",
        description: "9 –±–µ–ª—ã—Ö —Ä–æ–∑ –≤ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ",
        price: 3200,
        category: "roses",
        emoji: "ü•Ä",
        features: ["–ù–µ–∂–Ω—ã–µ –±—É—Ç–æ–Ω—ã", "–ë–µ–ª–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–°–∏–º–≤–æ–ª —á–∏—Å—Ç–æ—Ç—ã"]
    },
    {
        id: 5,
        name: "–ñ–µ–ª—Ç—ã–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        description: "–°–æ–ª–Ω–µ—á–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ 12 —Ç—é–ª—å–ø–∞–Ω–æ–≤",
        price: 1800,
        category: "tulips",
        emoji: "üåº",
        features: ["–Ø—Ä–∫–∏–π —Ü–≤–µ—Ç", "–ü–æ–¥–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "–°–≤–µ–∂–µ—Å—Ä–µ–∑–∞–Ω–Ω—ã–µ"]
    },
    {
        id: 6,
        name: "–ü—Ä–µ–º–∏—É–º —Å–±–æ—Ä–∫–∞",
        description: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç—ã –¥–ª—è –æ—Å–æ–±–æ–≥–æ —Å–ª—É—á–∞—è",
        price: 5500,
        category: "mixed",
        emoji: "üéÄ",
        features: ["–û—Ç–±–æ—Ä–Ω—ã–µ —Ü–≤–µ—Ç—ã", "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ç–∫—Ä—ã—Ç–∫–∞"]
    }
];

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function loadProducts() {
    const grid = document.getElementById('productsGrid');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    grid.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ü–≤–µ—Ç–æ–≤...</div>';
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    setTimeout(() => {
        const filteredProducts = currentCategory === 'all' 
            ? products 
            : products.filter(p => p.category === currentCategory);
        
        if (filteredProducts.length === 0) {
            grid.innerHTML = `
                <div class="empty-cart">
                    <div class="icon">üå±</div>
                    <div>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ü–≤–µ—Ç–æ–≤</div>
                </div>
            `;
            return;
        }
        
        grid.innerHTML = '';
        
        filteredProducts.forEach(product => {
            const productCard = document.createElement('div');
            productCard.className = 'product-card';
            productCard.innerHTML = `
                <div class="product-image">${product.emoji}</div>
                <div class="product-name">${product.name}</div>
                <div class="product-description">${product.description}</div>
                <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                <button class="add-to-cart" onclick="event.stopPropagation(); addToCart(${product.id})">
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </button>
            `;
            productCard.onclick = () => showProductDetail(product.id);
            grid.appendChild(productCard);
        });
    }, 300);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function setupCategoryTabs() {
    const tabs = document.querySelectorAll('.category-tab');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            currentCategory = tab.dataset.category;
            loadProducts();
        });
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
function showProductDetail(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.getElementById('mainPage').classList.add('hidden');
    document.getElementById('productPage').classList.remove('hidden');
    document.getElementById('orderPage').classList.add('hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ Telegram
    if (tg && tg.BackButton) {
        tg.BackButton.show();
    }
    
    const detailContainer = document.getElementById('productDetail');
    detailContainer.innerHTML = `
        <div class="product-detail">
            <div class="product-image" style="height: 200px; font-size: 64px;">
                ${product.emoji}
            </div>
            <h2 style="margin-bottom: 8px;">${product.name}</h2>
            <p style="margin-bottom: 12px; color: #666;">${product.description}</p>
            
            <div style="margin-bottom: 16px;">
                <h3 style="font-size: 14px; margin-bottom: 8px; color: #333;">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
                <ul style="color: #666; font-size: 14px; padding-left: 16px;">
                    ${product.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
            </div>
            
            <div style="font-size: 24px; font-weight: bold; color: #e91e63; margin-bottom: 16px;">
                ${product.price.toLocaleString()} ‚ÇΩ
            </div>
            
            <button class="add-to-cart" style="padding: 12px; font-size: 16px;" 
                    onclick="addToCart(${product.id}); showMainPage()">
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
            </button>
        </div>
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞
function showOrderPage() {
    if (cart.length === 0) {
        showNotification('üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã.');
        return;
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.getElementById('mainPage').classList.add('hidden');
    document.getElementById('productPage').classList.add('hidden');
    document.getElementById('orderPage').classList.remove('hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ Telegram
    if (tg && tg.BackButton) {
        tg.BackButton.show();
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞
    const orderItemsContainer = document.getElementById('orderItems');
    const orderTotalContainer = document.getElementById('orderTotal');
    
    let orderHTML = '';
    let total = 0;
    
    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        
        orderHTML += `
            <div class="order-item">
                <div>
                    <div style="font-weight: 500;">${item.name}</div>
                    <div style="font-size: 14px; color: #666;">${item.price.toLocaleString()} ‚ÇΩ √ó ${item.quantity}</div>
                </div>
                <div style="font-weight: bold; color: #e91e63;">
                    ${itemTotal.toLocaleString()} ‚ÇΩ
                </div>
            </div>
        `;
    });
    
    orderItemsContainer.innerHTML = orderHTML;
    orderTotalContainer.textContent = `–ò—Ç–æ–≥–æ: ${total.toLocaleString()} ‚ÇΩ`;
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã
    clearFormErrors();
}

// –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function showMainPage() {
    document.getElementById('mainPage').classList.remove('hidden');
    document.getElementById('productPage').classList.add('hidden');
    document.getElementById('orderPage').classList.add('hidden');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ Telegram
    if (tg && tg.BackButton) {
        tg.BackButton.hide();
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    
    const existingItem = cart.find(item => item.id === productId);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }
    
    updateCartDisplay();
    
    // –¢–∞–∫—Ç–∏–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫ –≤ Telegram
    if (tg && tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('light');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(`‚úÖ ${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    // –í Telegram –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (tg && tg.showAlert) {
        tg.showAlert(message);
    } else {
        // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 2000);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function updateCartDisplay() {
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    document.getElementById('cartTotal').textContent = `${total.toLocaleString()} ‚ÇΩ`;
    document.getElementById('cartCount').textContent = totalCount;
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
    const checkoutBtn = document.getElementById('checkoutBtn');
    checkoutBtn.disabled = totalCount === 0;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm() {
    let isValid = true;
    clearFormErrors();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryDate = document.getElementById('deliveryDate').value;
    if (!deliveryDate) {
        showError('deliveryDate', 'dateError', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏');
        isValid = false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryAddress = document.getElementById('deliveryAddress').value.trim();
    if (!deliveryAddress) {
        showError('deliveryAddress', 'addressError', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏');
        isValid = false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    const senderPhone = document.getElementById('senderPhone').value.trim();
    if (!senderPhone) {
        showError('senderPhone', 'senderPhoneError', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω');
        isValid = false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    const senderName = document.getElementById('senderName').value.trim();
    if (!senderName) {
        showError('senderName', 'senderNameError', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
        isValid = false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    const receiverName = document.getElementById('receiverName').value.trim();
    if (!receiverName) {
        showError('receiverName', 'receiverNameError', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è');
        isValid = false;
    }
    
    return isValid;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–ª—è
function showError(fieldId, errorId, message) {
    const field = document.getElementById(fieldId);
    const error = document.getElementById(errorId);
    
    field.classList.add('error');
    error.textContent = message;
    error.style.display = 'block';
}

// –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏
function clearFormErrors() {
    const errors = document.querySelectorAll('.error-message');
    const inputs = document.querySelectorAll('.form-input');
    
    errors.forEach(error => error.style.display = 'none');
    inputs.forEach(input => input.classList.remove('error'));
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        day: 'numeric',
        month: 'long',
        year: 'numeric'
    });
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function validateAndConfirmOrder() {
    if (!validateForm()) {
        showNotification('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }
    
    confirmOrder();
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function confirmOrder() {
    if (cart.length === 0) {
        showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
        return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = {
        deliveryDate: document.getElementById('deliveryDate').value,
        deliveryAddress: document.getElementById('deliveryAddress').value.trim(),
        senderPhone: document.getElementById('senderPhone').value.trim(),
        senderName: document.getElementById('senderName').value.trim(),
        receiverPhone: document.getElementById('receiverPhone').value.trim(),
        receiverName: document.getElementById('receiverName').value.trim(),
        bouquetWishes: document.getElementById('bouquetWishes').value.trim(),
        cardMessage: document.getElementById('cardMessage').value.trim()
    };
    
    const orderDetails = cart.map(item => 
        `‚Ä¢ ${item.name} x${item.quantity} - ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
    ).join('\n');
    
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    const orderMessage = 
        `üíê *–ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó –¶–í–ï–¢–û–ß–ù–û–ì–û –ú–ê–ì–ê–ó–ò–ù–ê*\n\n` +
        `*üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n${orderDetails}\n\n` +
        `*üí∞ –ò—Ç–æ–≥–æ:* ${total.toLocaleString()} ‚ÇΩ\n\n` +
        `*üöö –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏:*\n` +
        `üìÖ –î–∞—Ç–∞: ${formatDate(formData.deliveryDate)}\n` +
        `üìç –ê–¥—Ä–µ—Å: ${formData.deliveryAddress}\n\n` +
        `*üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:*\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.senderPhone}\n` +
        `üë§ –ò–º—è: ${formData.senderName}\n\n` +
        `*üéØ –ü–æ–ª—É—á–∞—Ç–µ–ª—å:*\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.receiverPhone || formData.senderPhone}\n` +
        `üë§ –ò–º—è: ${formData.receiverName}\n\n` +
        `*üíå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:*\n` +
        `–ü–æ–∂–µ–ª–∞–Ω–∏—è –∫ –±—É–∫–µ—Ç—É: ${formData.bouquetWishes || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}\n` +
        `–¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏: ${formData.cardMessage || '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n\n` +
        `_–î–ª—è —Å–≤—è–∑–∏ —Å –∫–ª–∏–µ–Ω—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è_`;
    
    // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    const clientMessage = 
        `‚úÖ *–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!*\n\n` +
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–π —Ü–≤–µ—Ç–æ—á–Ω–æ–π –ª–∞–≤–∫–µ! üå∏\n\n` +
        `*–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*\n${orderDetails}\n\n` +
        `*–ò—Ç–æ–≥–æ:* ${total.toLocaleString()} ‚ÇΩ\n\n` +
        `*–î–æ—Å—Ç–∞–≤–∫–∞:* ${formatDate(formData.deliveryDate)}\n` +
        `*–ê–¥—Ä–µ—Å:* ${formData.deliveryAddress}\n\n` +
        `–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ Telegram
    if (tg && tg.showPopup) {
        tg.showPopup({
            title: '‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!',
            message: clientMessage,
            buttons: [
                {
                    type: 'default',
                    text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º',
                    id: 'contact_manager'
                },
                {
                    type: 'ok',
                    text: '–ü–æ–Ω—è—Ç–Ω–æ',
                    id: 'ok'
                }
            ]
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –ø–æ–ø–∞–ø–µ
        tg.onEvent('popupClosed', (data) => {
            if (data.button_id === 'contact_manager') {
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
                // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô USERNAME –ú–ï–ù–ï–î–ñ–ï–†–ê
                tg.openTelegramLink('https://t.me/your_flower_manager');
            }
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç API –∑–∞–ø—Ä–æ—Å)
            sendOrderToManager(orderMessage);
            
            // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞
            cart = [];
            updateCartDisplay();
            showMainPage();
        });
    } else {
        // –î–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
        alert(clientMessage + '\n\n–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n' + orderMessage);
        
        //
