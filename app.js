// =============================================
// üå∏ –¶–í–ï–¢–û–ß–ù–´–ô –ú–ê–ì–ê–ó–ò–ù - Telegram Mini App
// =============================================

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = null;
let cart = [];
let currentCategory = 'all';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
function initTelegramApp() {
    console.log('üå∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp) {
        tg = window.Telegram.WebApp;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        tg.ready();
        tg.expand();
        tg.enableClosingConfirmation();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        tg.BackButton.onClick(handleBackButton);
        
        console.log('üå∏ Telegram Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
        
    } else {
        console.log('üå∏ –ó–∞–ø—É—â–µ–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –Ω–µ –≤ Telegram');
        tg = {
            BackButton: {
                show: () => console.log('BackButton show'),
                hide: () => console.log('BackButton hide'),
                onClick: (cb) => { window.backButtonCallback = cb; }
            },
            showPopup: (params) => alert(params.title + '\n' + params.message),
            showAlert: (message) => alert(message),
            HapticFeedback: { impactOccurred: () => console.log('Haptic feedback') },
            openTelegramLink: (url) => window.open(url, '_blank')
        };
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
function handleBackButton() {
    if (isProductPageVisible()) {
        showMainPage();
    } else if (isOrderPageVisible()) {
        showMainPage();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
function isProductPageVisible() {
    return !document.getElementById('productPage').classList.contains('hidden');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–∫–∞–∑–∞
function isOrderPageVisible() {
    return !document.getElementById('orderPage').classList.contains('hidden');
}

// –ü–†–û–°–¢–´–ï –î–ê–ù–ù–´–ï –¢–û–í–ê–†–û–í (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
const products = [
    {
        id: 1,
        name: "–ë—É–∫–µ—Ç –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑",
        shortDescription: "11 —Ä–æ—Å–∫–æ—à–Ω—ã—Ö –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑",
        price: 3500,
        category: "roses",
        emoji: "üåπ",
        image: "https://images.unsplash.com/photo-1519378058457-4c29a0a2efac?w=400&h=300&fit=crop",
        features: ["–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã", "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞"]
    },
    {
        id: 2,
        name: "–í–µ—Å–µ–Ω–Ω–∏–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        shortDescription: "15 —Å–≤–µ–∂–∏—Ö —Ç—é–ª—å–ø–∞–Ω–æ–≤",
        price: 2200,
        category: "tulips",
        emoji: "üå∑",
        image: "https://images.unsplash.com/photo-1582799165859-2bb5e2e9c0d1?w=400&h=300&fit=crop",
        features: ["–Ø—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞", "–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã"]
    },
    {
        id: 3,
        name: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –º–∏–∫—Å",
        shortDescription: "–°–º–µ—Å—å —Ä–æ–∑ –∏ –ø–∏–æ–Ω–æ–≤",
        price: 4200,
        category: "mixed",
        emoji: "üíê",
        image: "https://images.unsplash.com/photo-1487070183333-13a19e8d6d8d?w=400&h=300&fit=crop",
        features: ["–†–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã", "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞"]
    },
    {
        id: 4,
        name: "–ë—É–∫–µ—Ç –±–µ–ª—ã—Ö —Ä–æ–∑",
        shortDescription: "9 –±–µ–ª—ã—Ö —Ä–æ–∑",
        price: 3200,
        category: "roses",
        emoji: "ü•Ä",
        image: "https://images.unsplash.com/photo-1563241527-3004b7be0ffd?w=400&h=300&fit=crop",
        features: ["–ù–µ–∂–Ω—ã–µ –±—É—Ç–æ–Ω—ã", "–ë–µ–ª–∞—è —É–ø–∞–∫–æ–≤–∫–∞"]
    },
    {
        id: 5,
        name: "–ñ–µ–ª—Ç—ã–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        shortDescription: "12 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö —Ç—é–ª—å–ø–∞–Ω–æ–≤",
        price: 1800,
        category: "tulips",
        emoji: "üåº",
        image: "https://images.unsplash.com/photo-1597848212624-e6d4bd6deb47?w=400&h=300&fit=crop",
        features: ["–Ø—Ä–∫–∏–π —Ü–≤–µ—Ç", "–°–≤–µ–∂–µ—Å—Ä–µ–∑–∞–Ω–Ω—ã–µ"]
    },
    {
        id: 6,
        name: "–ü—Ä–µ–º–∏—É–º —Å–±–æ—Ä–∫–∞",
        shortDescription: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç—ã",
        price: 5500,
        category: "mixed",
        emoji: "üéÄ",
        image: "https://images.unsplash.com/photo-1572853139777-6e6d0b21cd8e?w=400&h=300&fit=crop",
        features: ["–û—Ç–±–æ—Ä–Ω—ã–µ —Ü–≤–µ—Ç—ã", "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞"]
    }
];

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function loadProducts() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...', currentCategory);
    
    const grid = document.getElementById('productsGrid');
    if (!grid) {
        console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω productsGrid');
        return;
    }

    const filteredProducts = currentCategory === 'all' 
        ? products 
        : products.filter(p => p.category === currentCategory);

    console.log('üì¶ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', filteredProducts.length);

    if (filteredProducts.length === 0) {
        grid.innerHTML = `
            <div class="empty-cart">
                <div class="icon">üå±</div>
                <div>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ü–≤–µ—Ç–æ–≤</div>
            </div>
        `;
        return;
    }

    grid.innerHTML = '';
    
    filteredProducts.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'product-card';
        productCard.innerHTML = `
            <div class="product-image">
                <img src="${product.image}" alt="${product.name}" onerror="this.style.display='none'; this.parentNode.innerHTML='${product.emoji}'">
            </div>
            <div class="product-name">${product.name}</div>
            <div class="product-description">${product.shortDescription}</div>
            <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
            <button class="add-to-cart" onclick="event.stopPropagation(); addToCart(${product.id})">
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
            </button>
        `;
        productCard.onclick = () => showProductDetail(product.id);
        grid.appendChild(productCard);
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function setupCategoryTabs() {
    console.log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    
    const tabs = document.querySelectorAll('.category-tab');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            currentCategory = tab.dataset.category;
            console.log('üîΩ –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', currentCategory);
            loadProducts();
        });
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
function showProductDetail(productId) {
    console.log('üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä:', productId);
    
    const product = products.find(p => p.id === productId);
    if (!product) return;

    document.getElementById('mainPage').classList.add('hidden');
    document.getElementById('productPage').classList.remove('hidden');
    document.getElementById('orderPage').classList.add('hidden');

    if (tg && tg.BackButton) {
        tg.BackButton.show();
    }

    const detailContainer = document.getElementById('productDetail');
    detailContainer.innerHTML = `
        <div class="product-detail">
            <img src="${product.image}" alt="${product.name}" class="product-detail-image" onerror="this.style.display='none'">
            <h2>${product.name}</h2>
            <p class="product-full-description">${product.shortDescription}</p>
            
            <div class="product-features">
                <h3>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
                <ul class="feature-list">
                    ${product.features.map(feature => `
                        <li>
                            <span class="feature-icon">‚úì</span>
                            ${feature}
                        </li>
                    `).join('')}
                </ul>
            </div>
            
            <div style="font-size: 24px; font-weight: bold; color: #e91e63; margin: 20px 0;">
                ${product.price.toLocaleString()} ‚ÇΩ
            </div>
            
            <button class="add-to-cart" style="padding: 16px; font-size: 18px;" 
                    onclick="addToCart(${product.id}); showMainPage()">
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
            </button>
        </div>
    `;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞
function showOrderPage() {
    console.log('üì¶ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞');
    
    if (cart.length === 0) {
        showNotification('üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã.');
        return;
    }

    document.getElementById('mainPage').classList.add('hidden');
    document.getElementById('productPage').classList.add('hidden');
    document.getElementById('orderPage').classList.remove('hidden');

    if (tg && tg.BackButton) {
        tg.BackButton.show();
    }

    const orderItemsContainer = document.getElementById('orderItems');
    const orderTotalContainer = document.getElementById('orderTotal');
    
    let orderHTML = '';
    let total = 0;
    
    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        
        orderHTML += `
            <div class="order-item">
                <div>
                    <div style="font-weight: 500;">${item.name}</div>
                    <div style="font-size: 14px; color: #666;">${item.price.toLocaleString()} ‚ÇΩ √ó ${item.quantity}</div>
                </div>
                <div style="font-weight: bold; color: #e91e63;">
                    ${itemTotal.toLocaleString()} ‚ÇΩ
                </div>
            </div>
        `;
    });
    
    orderItemsContainer.innerHTML = orderHTML;
    orderTotalContainer.textContent = `–ò—Ç–æ–≥–æ: ${total.toLocaleString()} ‚ÇΩ`;
    
    clearFormErrors();
    setupDeliveryDate();
}

// –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function showMainPage() {
    console.log('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
    
    document.getElementById('mainPage').classList.remove('hidden');
    document.getElementById('productPage').classList.add('hidden');
    document.getElementById('orderPage').classList.add('hidden');

    if (tg && tg.BackButton) {
        tg.BackButton.hide();
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
function setupDeliveryDate() {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);
    
    const minDate = tomorrow.toISOString().split('T')[0];
    const dateInput = document.getElementById('deliveryDate');
    if (dateInput) {
        dateInput.min = minDate;
        if (!dateInput.value) {
            dateInput.value = minDate;
        }
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    console.log('‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É:', productId);
    
    const product = products.find(p => p.id === productId);
    if (!product) return;

    const existingItem = cart.find(item => item.id === productId);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }

    updateCartDisplay();

    if (tg && tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('light');
    }

    showNotification(`‚úÖ ${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    console.log('üí¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', message);
    
    if (tg && tg.showAlert) {
        tg.showAlert(message);
    } else {
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 2000);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function updateCartDisplay() {
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    document.getElementById('cartTotal').textContent = `${total.toLocaleString()} ‚ÇΩ`;
    document.getElementById('cartCount').textContent = totalCount;
    
    const checkoutBtn = document.getElementById('checkoutBtn');
    checkoutBtn.disabled = totalCount === 0;
    
    console.log('üõí –ö–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', totalCount, '—Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞', total, '‚ÇΩ');
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm() {
    let isValid = true;
    clearFormErrors();

    const fields = [
        { id: 'deliveryDate', errorId: 'dateError', message: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏' },
        { id: 'deliveryAddress', errorId: 'addressError', message: '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏' },
        { id: 'senderPhone', errorId: 'senderPhoneError', message: '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω' },
        { id: 'senderName', errorId: 'senderNameError', message: '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è' },
        { id: 'receiverName', errorId: 'receiverNameError', message: '–£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è' }
    ];

    fields.forEach(field => {
        const element = document.getElementById(field.id);
        if (!element || !element.value.trim()) {
            showError(field.id, field.errorId, field.message);
            isValid = false;
        }
    });

    return isValid;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–ª—è
function showError(fieldId, errorId, message) {
    const field = document.getElementById(fieldId);
    const error = document.getElementById(errorId);
    
    if (field && error) {
        field.classList.add('error');
        error.textContent = message;
        error.style.display = 'block';
    }
}

// –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏
function clearFormErrors() {
    const errors = document.querySelectorAll('.error-message');
    const inputs = document.querySelectorAll('.form-input');
    
    errors.forEach(error => error.style.display = 'none');
    inputs.forEach(input => input.classList.remove('error'));
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function validateAndConfirmOrder() {
    if (!validateForm()) {
        showNotification('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }
    
    confirmOrder();
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function confirmOrder() {
    console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞');
    
    const formData = collectFormData();
    if (!formData) return;

    const total = formData.total;
    const orderDetails = cart.map(item => 
        `‚Ä¢ ${item.name} x${item.quantity} - ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
    ).join('\n');

    const clientMessage = 
        `‚úÖ *–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!*\n\n` +
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–π —Ü–≤–µ—Ç–æ—á–Ω–æ–π –ª–∞–≤–∫–µ! üå∏\n\n` +
        `*–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*\n${orderDetails}\n\n` +
        `*–ò—Ç–æ–≥–æ:* ${total.toLocaleString()} ‚ÇΩ\n\n` +
        `–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç.`;

    if (tg && tg.showPopup) {
        tg.showPopup({
            title: '‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!',
            message: clientMessage,
            buttons: [{
                type: 'default',
                text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º',
                id: 'contact_manager'
            }]
        });

        tg.onEvent('popupClosed', (data) => {
            if (data.button_id === 'contact_manager') {
                tg.openTelegramLink('https://t.me/your_flower_manager');
            }
            sendOrderToManager(formData);
            clearCartAndReset();
        });
    } else {
        alert(clientMessage);
        sendOrderToManager(formData);
        clearCartAndReset();
    }
}

// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
function collectFormData() {
    if (!validateForm()) return null;

    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    return {
        deliveryDate: document.getElementById('deliveryDate').value,
        deliveryAddress: document.getElementById('deliveryAddress').value.trim(),
        senderPhone: document.getElementById('senderPhone').value.trim(),
        senderName: document.getElementById('senderName').value.trim(),
        receiverPhone: document.getElementById('receiverPhone').value.trim(),
        receiverName: document.getElementById('receiverName').value.trim(),
        bouquetWishes: document.getElementById('bouquetWishes').value.trim(),
        cardMessage: document.getElementById('cardMessage').value.trim(),
        items: cart.map(item => ({
            name: item.name,
            quantity: item.quantity,
            price: item.price
        })),
        total: total
    };
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É
function sendOrderToManager(formData, paymentMethod = '–Ω–µ —É–∫–∞–∑–∞–Ω') {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É:', formData);
    
    const orderMessage = 
        `üíê *–ù–û–í–´–ô –ó–ê–ö–ê–ó –ò–ó –¶–í–ï–¢–û–ß–ù–û–ì–û –ú–ê–ì–ê–ó–ò–ù–ê*\n\n` +
        `*üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n${formData.items.map(item => 
            `‚Ä¢ ${item.name} x${item.quantity} - ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
        ).join('\n')}\n\n` +
        `*üí∞ –ò—Ç–æ–≥–æ:* ${formData.total.toLocaleString()} ‚ÇΩ\n\n` +
        `*üöö –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∞–≤–∫–∏:*\n` +
        `üìÖ –î–∞—Ç–∞: ${new Date(formData.deliveryDate).toLocaleDateString('ru-RU')}\n` +
        `üìç –ê–¥—Ä–µ—Å: ${formData.deliveryAddress}\n\n` +
        `*üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:*\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.senderPhone}\n` +
        `üë§ –ò–º—è: ${formData.senderName}\n\n` +
        `*üéØ –ü–æ–ª—É—á–∞—Ç–µ–ª—å:*\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.receiverPhone || formData.senderPhone}\n` +
        `üë§ –ò–º—è: ${formData.receiverName}\n\n` +
        `*üíå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:*\n` +
        `–ü–æ–∂–µ–ª–∞–Ω–∏—è: ${formData.bouquetWishes || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}\n` +
        `–û—Ç–∫—Ä—ã—Ç–∫–∞: ${formData.cardMessage || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`;

    console.log('üìã –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n', orderMessage);
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –≤ Telegram –±–æ—Ç–∞
    showNotification('üì§ –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É!');
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏ —Å–±—Ä–æ—Å
function clearCartAndReset() {
    cart = [];
    updateCartDisplay();
    showMainPage();
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initApp() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    initTelegramApp();
    loadProducts();
    setupCategoryTabs();
    updateCartDisplay();
    setupDeliveryDate();
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
}

// =============================================
// üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
// =============================================

document.addEventListener('DOMContentLoaded', initApp);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.showProductDetail = showProductDetail;
window.showMainPage = showMainPage;
window.showOrderPage = showOrderPage;
window.addToCart = addToCart;
window.validateAndConfirmOrder = validateAndConfirmOrder;
