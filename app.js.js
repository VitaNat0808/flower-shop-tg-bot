// =============================================
// üå∏ –¶–í–ï–¢–û–ß–ù–´–ô –ú–ê–ì–ê–ó–ò–ù - Telegram Mini App
// =============================================

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
function initApp() {
    // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    tg.expand();
    
    // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
    tg.enableClosingConfirmation();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    tg.BackButton.show();
    tg.BackButton.onClick(handleBackButton);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    loadProducts();
    setupCategoryTabs();
    updateCartDisplay();
    
    console.log('üå∏ –¶–≤–µ—Ç–æ—á–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –∑–∞–≥—Ä—É–∂–µ–Ω!');
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', tg.initDataUnsafe?.user);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
function handleBackButton() {
    if (isProductPageVisible()) {
        showMainPage();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
function isProductPageVisible() {
    return !document.getElementById('productPage').classList.contains('hidden');
}

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const products = [
    {
        id: 1,
        name: "–ë—É–∫–µ—Ç –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑",
        description: "11 —Ä–æ—Å–∫–æ—à–Ω—ã—Ö –∫—Ä–∞—Å–Ω—ã—Ö —Ä–æ–∑ —Å –∑–µ–ª–µ–Ω—å—é",
        price: 3500,
        category: "roses",
        emoji: "üåπ",
        features: ["–°–≤–µ–∂–∏–µ —Ü–≤–µ—Ç—ã", "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ 2 —á–∞—Å–∞"]
    },
    {
        id: 2,
        name: "–í–µ—Å–µ–Ω–Ω–∏–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        description: "15 —Å–≤–µ–∂–∏—Ö —Ç—é–ª—å–ø–∞–Ω–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤",
        price: 2200,
        category: "tulips",
        emoji: "üå∑",
        features: ["–Ø—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞", "–°–µ–∑–æ–Ω–Ω—ã–µ —Ü–≤–µ—Ç—ã", "–î–æ–ª–≥–æ —Å—Ç–æ—è—Ç"]
    },
    {
        id: 3,
        name: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –º–∏–∫—Å",
        description: "–°–º–µ—Å—å —Ä–æ–∑, –ø–∏–æ–Ω–æ–≤ –∏ —ç—É—Å—Ç–æ–º—ã",
        price: 4200,
        category: "mixed",
        emoji: "üíê",
        features: ["–†–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã", "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–≤–∏–¥–∞–Ω–∏—è"]
    },
    {
        id: 4,
        name: "–ë—É–∫–µ—Ç –±–µ–ª—ã—Ö —Ä–æ–∑",
        description: "9 –±–µ–ª—ã—Ö —Ä–æ–∑ –≤ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–π —É–ø–∞–∫–æ–≤–∫–µ",
        price: 3200,
        category: "roses",
        emoji: "ü•Ä",
        features: ["–ù–µ–∂–Ω—ã–µ –±—É—Ç–æ–Ω—ã", "–ë–µ–ª–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–°–∏–º–≤–æ–ª —á–∏—Å—Ç–æ—Ç—ã"]
    },
    {
        id: 5,
        name: "–ñ–µ–ª—Ç—ã–µ —Ç—é–ª—å–ø–∞–Ω—ã",
        description: "–°–æ–ª–Ω–µ—á–Ω—ã–π –±—É–∫–µ—Ç –∏–∑ 12 —Ç—é–ª—å–ø–∞–Ω–æ–≤",
        price: 1800,
        category: "tulips",
        emoji: "üåº",
        features: ["–Ø—Ä–∫–∏–π —Ü–≤–µ—Ç", "–ü–æ–¥–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "–°–≤–µ–∂–µ—Å—Ä–µ–∑–∞–Ω–Ω—ã–µ"]
    },
    {
        id: 6,
        name: "–ü—Ä–µ–º–∏—É–º —Å–±–æ—Ä–∫–∞",
        description: "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç—ã –¥–ª—è –æ—Å–æ–±–æ–≥–æ —Å–ª—É—á–∞—è",
        price: 5500,
        category: "mixed",
        emoji: "üéÄ",
        features: ["–û—Ç–±–æ—Ä–Ω—ã–µ —Ü–≤–µ—Ç—ã", "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ç–∫—Ä—ã—Ç–∫–∞"]
    },
    {
        id: 7,
        name: "–†–æ–∑–æ–≤—ã–µ –ø–∏–æ–Ω—ã",
        description: "7 –ø—É—à–∏—Å—Ç—ã—Ö –ø–∏–æ–Ω–æ–≤ –≤ –Ω–µ–∂–Ω—ã—Ö —Ç–æ–Ω–∞—Ö",
        price: 3800,
        category: "mixed",
        emoji: "üå∫",
        features: ["–ù–µ–∂–Ω—ã–π –∞—Ä–æ–º–∞—Ç", "–ü—ã—à–Ω—ã–µ –±—É—Ç–æ–Ω—ã", "–í –º–æ–¥–µ —Å–µ–∑–æ–Ω–∞"]
    },
    {
        id: 8,
        name: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ä–æ–∑—ã",
        description: "15 –∞–ª—ã—Ö —Ä–æ–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã",
        price: 2900,
        category: "roses",
        emoji: "üåπ",
        features: ["–ò–¥–µ–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞", "–î–ª–∏–Ω–Ω—ã–π —Å—Ç–µ–±–µ–ª—å", "–í–µ—á–Ω–∞—è –∫–ª–∞—Å—Å–∏–∫–∞"]
    }
];

// –ö–æ—Ä–∑–∏–Ω–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let cart = [];
let currentCategory = 'all';

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function loadProducts() {
    const grid = document.getElementById('productsGrid');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    grid.innerHTML = '<div class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ü–≤–µ—Ç–æ–≤...</div>';
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    setTimeout(() => {
        const filteredProducts = currentCategory === 'all' 
            ? products 
            : products.filter(p => p.category === currentCategory);
        
        if (filteredProducts.length === 0) {
            grid.innerHTML = `
                <div class="empty-cart">
                    <div class="icon">üå±</div>
                    <div>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ü–≤–µ—Ç–æ–≤</div>
                </div>
            `;
            return;
        }
        
        grid.innerHTML = '';
        
        filteredProducts.forEach(product => {
            const productCard = document.createElement('div');
            productCard.className = 'product-card';
            productCard.innerHTML = `
                <div class="product-image">${product.emoji}</div>
                <div class="product-name">${product.name}</div>
                <div class="product-description">${product.description}</div>
                <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
                <button class="add-to-cart" onclick="event.stopPropagation(); addToCart(${product.id})">
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </button>
            `;
            productCard.onclick = () => showProductDetail(product.id);
            grid.appendChild(productCard);
        });
    }, 300);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function setupCategoryTabs() {
    const tabs = document.querySelectorAll('.category-tab');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
            currentCategory = tab.dataset.category;
            loadProducts();
        });
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
function showProductDetail(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.getElementById('mainPage').classList.add('hidden');
    document.getElementById('productPage').classList.remove('hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    tg.BackButton.show();
    
    const detailContainer = document.getElementById('productDetail');
    detailContainer.innerHTML = `
        <div class="product-detail">
            <div class="product-image" style="height: 200px; font-size: 64px;">
                ${product.emoji}
            </div>
            <h2 style="margin-bottom: 8px;">${product.name}</h2>
            <p style="margin-bottom: 12px; color: #666;">${product.description}</p>
            
            <div style="margin-bottom: 16px;">
                <h3 style="font-size: 14px; margin-bottom: 8px; color: #333;">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
                <ul style="color: #666; font-size: 14px; padding-left: 16px;">
                    ${product.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
            </div>
            
            <div style="font-size: 24px; font-weight: bold; color: #e91e63; margin-bottom: 16px;">
                ${product.price.toLocaleString()} ‚ÇΩ
            </div>
            
            <button class="add-to-cart" style="padding: 12px; font-size: 16px;" 
                    onclick="addToCart(${product.id}); showMainPage()">
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
            </button>
        </div>
    `;
}

// –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function showMainPage() {
    document.getElementById('mainPage').classList.remove('hidden');
    document.getElementById('productPage').classList.add('hidden');
    tg.BackButton.hide();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (!product) return;
    
    const existingItem = cart.find(item => item.id === productId);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        cart.push({
            ...product,
            quantity: 1
        });
    }
    
    updateCartDisplay();
    
    // –¢–∞–∫—Ç–∏–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
    if (tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred('light');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(`‚úÖ ${product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 2000);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function updateCartDisplay() {
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    document.getElementById('cartTotal').textContent = `${total.toLocaleString()} ‚ÇΩ`;
    document.getElementById('cartCount').textContent = totalCount;
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
    const checkoutBtn = document.getElementById('checkoutBtn');
    checkoutBtn.disabled = totalCount === 0;
}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function checkout() {
    if (cart.length === 0) {
        tg.showPopup({
            title: '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞',
            message: '–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞',
            buttons: [{ type: 'ok' }]
        });
        return;
    }
    
    const orderDetails = cart.map(item => 
        `‚Ä¢ ${item.name} x${item.quantity} - ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
    ).join('\n');
    
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    
    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const orderMessage = `üíê *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ —Ü–≤–µ—Ç–æ—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞*\\n\\n` +
                        `${orderDetails}\\n\\n` +
                        `*–ò—Ç–æ–≥–æ:* ${total.toLocaleString()} ‚ÇΩ\\n\\n` +
                        `_–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º_`;
    
    tg.showPopup({
        title: 'üíê –í–∞—à –∑–∞–∫–∞–∑',
        message: `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–π —Ü–≤–µ—Ç–æ—á–Ω–æ–π –ª–∞–≤–∫–∏!\n\n${orderDetails}\n\n–ò—Ç–æ–≥–æ: ${total.toLocaleString()} ‚ÇΩ\n\n–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç.`,
        buttons: [
            {
                type: 'default',
                text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º',
                id: 'contact_manager'
            },
            {
                type: 'destructive', 
                text: '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑',
                id: 'cancel'
            }
        ]
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –ø–æ–ø–∞–ø–µ
    const popupHandler = (data) => {
        if (data.button_id === 'contact_manager') {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
            tg.openTelegramLink('https://t.me/your_flower_manager');
        }
        tg.offEvent('popupClosed', popupHandler);
    };
    
    tg.onEvent('popupClosed', popupHandler);
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
function clearCart() {
    cart = [];
    updateCartDisplay();
    showNotification('üõí –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞');
}

// =============================================
// üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
// =============================================

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', initApp);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.showProductDetail = showProductDetail;
window.showMainPage = showMainPage;
window.addToCart = addToCart;
window.checkout = checkout;
window.clearCart = clearCart;

console.log('üå∏ app.js –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!');